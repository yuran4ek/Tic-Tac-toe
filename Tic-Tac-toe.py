#Создаём функцию "Приветствие". В этой функции мы приветствуем игроков и объясняем правила игры
def description():
    print("--------------------------")
    print(" Добро пожаловать на игру:")
    print("--------------------------")
    print("   'Крестики - нолики'    ")
    print("--------------------------")
    print("Правила игры очень просты:")
    print("совершайте ходы по очереди")
    print(" Для того, что бы сходить ")
    print("  введите число от 1 - 9  ")
    print(" Пусть победит сильнейший!")
    print("--------------------------")
    print()


#Создаём игровое поле. Здесь мы создали переменную и поместили в неё список из чисел от 1-9
field = list(range(1, 10))


#Создаём функцию "Вывод игрового поля"
def print_field(field):
#Создаём цикл
      for i in range(3):
            print("-------------")
#На каждой итерации мы выводим 3 элемента списка в строку.
            print(f"| {field[0 + i * 3]} | {field[1 + i * 3]} | {field[2 + i * 3]} | ")
      print("-------------")


#Создаём функцию "Ход игрока"
def move():
#Создаём цикл
      while True:
#Просим игрока ввести число для размещения "х" или "о"
            player_choise = int(input("Введите число от 1-9: "))
#Присваиваем переменной введённое значение
            x = player_choise

#Проверяем введённое число в диапазоне от 1 до 9
            if x <= 9 and x > 0:
#Проверяем, свободна ли ячейка, в которую хотим разместить "х" или "о"
                  if x in field:
#Если клетка свободна, то возвращаем введённое значение
                        return x
                  else:
                        print("Клетка уже занята!")
            else:
                  print("Такой клетки нет на игровом поле! Введите число от 1-9")


#Создаём функцию "Выявление победителя"
def check_win():
#Создаём список из выигрышных комбинаций
      for_win = ((1, 2, 3), (4, 5, 6), (7, 8, 9), (1, 4, 7), (2, 5, 8), (3, 6, 9), (1, 5, 9), (3, 5, 7))
#Создаём цикл
      for i in for_win:
#На каждой итерации проверяем, находятся ли "х" или "о" в выигрышной комбинации
            if field[i[0]-1] == field[i[1]-1] == field[i[2]-1]:
#Вызываем функцию "Вывод игрового поля"
                  print_field(field)
#Поздравляем победителя игры
                  print(f"Поздравляю, '{field[i[0]-1]}' победил!")
                  return True
      return False


#Создаём функцию "Игра"
def game():
#Задаём счётчик шагов
      step = 0
#Вызываем фунцию "Приветствие"
      description()
      print(" Игровое поле: ")
#Создаём цикл
      while True:
#На каждой итерации увеличиваем счётчик шагов на 1
            step += 1
#Вызываем функцию "Вывод игрового поля"
            print_field(field)

#Проверяем, чей ход. Если счётчик шагов - нечётное число, то ходит "х"
            if step % 2 == 1:
                  print("Сейчас ходит 'x' ")
#Иначе ходит "о"
            else:
                  print("Сейчас ходит 'o' ")

#Объявляем переменную и присваиваем ей значение из вызванной функции "Ход игрока"
            x = move()
#Создаём цикл
            for i in field:
#Проверяем, кто из игроков совершил ход
#Если счётчик шагов - нечётное число, то введённое значение на поле заменяем на "х"
                  if step % 2 == 1:
                        field[x-1] = "x"
#Если счётчик шагов - чётное число, то введённое значение на поле заменяем на "о"
                  if step % 2 == 0:
                        field[x-1] = "o"

#Если результат вызова функции "Выявление победителя" - Истина, то прерываем цикл
            if check_win():
                  break
#Если счётчик шагов равен 9
            if step == 9:
#Печатаем игровое поле, объявляем ничью и прерываем цикл
                  print_field(field)
                  print("Увы, победителя не обнаружено. У вас ничья!")
                  break


#Вызываем функцию "Игра" и пытаемся победить своего оппонента
game()







